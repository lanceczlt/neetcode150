class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        #brute force
        res = 0

        for i in range(len(s)):
            letters = set()
            for j in range(i, len(s)):
                if s[j] in letters:
                    break;
                letters.add(s[j])
            res = max(res, len(letters))
        return res  


# sliding window
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        letterSet = set()
        l = 0
        res = 0

        for r in range(len(s)):
            while s[r] in letterSet:
                letterSet.remove(s[l])
                l+=1
            letterSet.add(s[r])
            res = max(res, r - l + 1)

        return res